cmake_minimum_required(VERSION 3.5)
project(FirstDemo)

#IF (UNIX)
#    INCLUDE_DIRECTORIES("/usr/include/mysql")
#    LINK_DIRECTORIES(/usr/lib)
#    #LINK_DIRECTORIES(/usr/mysql/lib)
#ELSEIF(APPLE)
#    INCLUDE_DIRECTORIES("/usr/local/mysql/include")
#    LINK_DIRECTORIES(/usr/local/mysql/lib)
#ENDIF (UNIX)
IF (APPLE)
    INCLUDE_DIRECTORIES("/usr/local/mysql/include")
    LINK_DIRECTORIES(/usr/local/mysql/lib)
ELSEIF(UNIX)
    INCLUDE_DIRECTORIES("/usr/include/mysql")
    LINK_DIRECTORIES(/usr/lib)
    #LINK_DIRECTORIES(/usr/mysql/lib)
ENDIF (APPLE)

MESSAGE(STSTUS "###################################")

MESSAGE(STATUS "operation system is ${CMAKE_SYSTEM}")

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    MESSAGE(STATUS "current platform: Linux ")
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    MESSAGE(STATUS "current platform: Windows")
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
    MESSAGE(STATUS "current platform: FreeBSD")
ELSE ()
    MESSAGE(STATUS "other platform: ${CMAKE_SYSTEM_NAME}")
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux")

MESSAGE(STSTUS "###################################")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
set(SOURCE_FILES cpp/main.cpp cpp/fun.cpp head/funHead.h head/FunMysql.h cpp/FunMysql.cpp cpp/HXLMysql.cpp head/HXLMysql.h head/app_mysql.h cpp/app_mysql.cpp)

add_executable(FirstDemo ${SOURCE_FILES})
TARGET_LINK_LIBRARIES(FirstDemo libmysqlclient.a)